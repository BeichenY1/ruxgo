name: Build and Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [created]

jobs:
  create-release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-unknown-linux-musl, x86_64-pc-windows-gnu]

    steps:
      - uses: actions/checkout@master

      - name: Setup cachix
        uses: cachix/install-nix-action@v12
        with:
          # Nix 2.0 or higher
          nix_version: 2.3.10

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "nightly"

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Compile and release
        uses: rust-build/rust-build.action@v1.4.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          EXTRA_FILES: "README.md LICENSE"